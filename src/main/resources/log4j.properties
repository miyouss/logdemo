#日志输出的优先级： debug < info < warn < error < fatal
#定义根日志记录器的日志级别(info)及输出源的别名(console,myFile)
#该定义让日志在控制台和文件输出，并且只输出info级别以上的日志
#log4j.rootLogger=WARN, Console , File, DailyRollingFile, database
#######输出格式解释#######
#%d: 日志打印的时间点，默认格式为ISO8601，也可以另外指定格式，
#定义如下： %d{yyy年MM月dd日 HH时mm分ss秒SSS}，则会输出：
#2018年01月06日 14时47分45秒590
#%p: 输出日志级别，即DEBUG，INFO，WARN，ERROR，FATAL
#%-5p：表示字符小于5位，则字符居左（不加“-”号则字符居右），你可以举一反三
#%c: 日志所在类的全名
#%M: 日志所在方法的名字
#%m: 日志信息
#%n: 输出一个回车换行符
#%L: 输出代码中的行号
log4j.rootLogger=INFO,Console

logdir=J:\/demo-log

#mysql
#basedirver=com.mysql.jdbc.Driver
#databaseurl=jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=UTF-8
#databaseuser=root
#databasepwd=root
#databasesql=insert into reslog (class,method,createtime,loglevel,exception,msg,modulename) VALUES ('%X{class}','%X{method}','%d{yyyy-MM-dd hh:mm:ss}','%p','%X{exception}','%m','resLog')

#pgsql
basedirver=org.postgresql.Driver
databaseurl=jdbc:postgresql://192.144.213.252:47295/demo
databaseuser=postgres
databasepwd=postgres
databasesql=insert into public.reslog (class,method,create_time,log_level,exception,msg,module_name) VALUES ('%X{class}','%X{method}','%d{yyyy-MM-dd hh:mm:ss}','%p','%X{exception}','%m','%X{modelname}')



#Console
#定义输出源别名console（即根日志记录器定义的输出源）
#的实现类是ConsoleAppender（控制台输出源）
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
#指定日志输出格式的格式转换器为PatternLayout实现类
log4j.appender.Console.layout=org.apache.log4j.PatternLayout  
#定义日志输出的具体格式
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n

# Druid
log4j.logger.druid.sql=DEBUG
log4j.logger.druid.sql.DataSource=DEBUG
log4j.logger.druid.sql.Connection=DEBUG
log4j.logger.druid.sql.Statement=DEBUG
log4j.logger.druid.sql.ResultSet=DEBUG
#设置包名的输出级别
log4j.logger.com.demo.dao=DEBUG


#resLog
##########################################################################################################################################################
log4j.logger.resLog=INFO,resLog,resLog_database

log4j.appender.resLog.Threshold=WARN
log4j.appender.resLog=org.apache.log4j.DailyRollingFileAppender
log4j.appender.resLog.File=${logdir}/resLog/resLog.log
log4j.appender.resLog.DatePattern='.'yyyy-MM-dd
log4j.appender.resLog.layout=org.apache.log4j.PatternLayout
log4j.appender.resLog.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n
log4j.appender.resLog.encoding=UTF-8
log4j.appender.resLog.Append=true
log4j.appender.resLog.ImmediateFlush=true
log4j.additivity.resLog=false

#database
log4j.appender.resLog_database.Threshold=WARN
log4j.appender.resLog_database.BufferSize=1
log4j.appender.resLog_database.layout=org.apache.log4j.PatternLayout
log4j.appender.resLog_database=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.resLog_database.driver=${basedirver}
log4j.appender.resLog_database.URL=${databaseurl}
log4j.appender.resLog_database.user=${databaseuser}
log4j.appender.resLog_database.password=${databasepwd}
log4j.appender.resLog_database.sql=${databasesql}

##########################################################################################################################################################
#resWarn
##########################################################################################################################################################
log4j.logger.resWarn=INFO,resWarn,resWarn_database

log4j.appender.resWarn.Threshold=WARN
log4j.appender.resWarn=org.apache.log4j.DailyRollingFileAppender
log4j.appender.resWarn.File=${logdir}/resWarn/resWarn.log
log4j.appender.resWarn.DatePattern='.'yyyy-MM-dd
log4j.appender.resWarn.layout=org.apache.log4j.PatternLayout
log4j.appender.resWarn.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n
log4j.appender.resWarn.encoding=UTF-8
log4j.appender.resWarn.Append=true
log4j.appender.resWarn.ImmediateFlush=true
log4j.additivity.resWarn=false

#database
log4j.appender.resWarn_database.Threshold=WARN
log4j.appender.resWarn_database.BufferSize=1
log4j.appender.resWarn_database.layout=org.apache.log4j.PatternLayout
log4j.appender.resWarn_database=org.apache.log4j.jdbc.JDBCAppender
log4j.appender.resWarn_database.driver=${basedirver}
log4j.appender.resWarn_database.URL=${databaseurl}
log4j.appender.resWarn_database.user=${databaseuser}
log4j.appender.resWarn_database.password=${databasepwd}
log4j.appender.resWarn_database.sql=${databasesql}

##########################################################################################################################################################